name: Deploy to production

on:
  release:
    types: [published]

jobs:

  eslint-main:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install node packages
      run: npm install

    - name: Run ESLint
      run: npm run lint

  jest:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install node packages
      run: npm install

    - name: Run tests
      run: npm run test

  robocop:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Robot Framework, SeleniumLibrary & Robocop
      run: pip install robotframework && pip install robotframework-seleniumlibrary && pip install selenium==4.9.1 && pip install robotframework-robocop

    - name: Run Robocop Checks
      run: robocop

  robot-chrome:

    runs-on: ubuntu-latest

    env:
      MONGODB_TEST_URI: ${{ secrets.MONGODB_TEST_URI }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      OIDC_CLIENT_ID: ${{ secrets.OIDC_CLIENT_ID }}
      OIDC_CLIENT_SECRET: ${{ secrets.OIDC_CLIENT_SECRET }}
      OIDC_REDIRECT_URI: ${{ secrets.OIDC_REDIRECT_URI }}

    steps:
    - uses: actions/checkout@v4

    - name: Install node packages
      run: npm install

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Robot Framework & SeleniumLibrary
      run: pip install robotframework && pip install robotframework-seleniumlibrary && pip install selenium==4.9.1 && pip install robotframework-requests

    - name: Run Robot tests in headless chrome
      run: sh tests/robot/actions_run_robot_tests.sh headlesschrome

  
  build:

    runs-on: ubuntu-latest
    needs: [eslint-main, jest, robocop, robot-chrome]

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./prod.Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/tieki-prod:latest
